generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  directUrl    = env("DIRECT_URL")
  relationMode = "prisma"
}

enum FieldOption {
  Mandatory
  Optional
  Off
}

enum JobStatus {
  ACTIVE
  INACTIVE
  DRAFT
}

enum JobType {
  FULL_TIME
  CONTRACT
  PART_TIME
  INTERNSHIP
  FREELANCE
}

enum Role {
  ADMIN
  USER
  CANDIDATE
}

model Job {
  id                 String    @id @default(cuid())
  slug               String    @unique
  title              String
  status             JobStatus @default(ACTIVE)
  jobDesc            String?
  jobType            JobType   @default(FULL_TIME)
  numberOfCandidates Int       @default(1)
  salaryMin          Int?
  salaryMax          Int?
  currency           String?   @default("IDR")
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt

  formConfigs FormConfig[]
  Candidate   Candidate[]
}

model FormConfig {
  id          String      @id @default(cuid())
  fieldKey    String
  fieldOption FieldOption @default(Off)
  jobId       String
  job         Job         @relation(fields: [jobId], references: [id])

  @@unique([jobId, fieldKey])
}

model User {
  id       String  @id @default(cuid())
  email    String  @unique
  password String
  name     String?
  role     Role    @default(USER)

  candidate Candidate?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Candidate {
  id          String @id @default(cuid())
  candidateId String @unique

  jobId  String?
  userId String? @unique

  job        Job?                 @relation(fields: [jobId], references: [id])
  user       User?                @relation(fields: [userId], references: [id])
  attributes CandidateAttribute[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([jobId])
}

model CandidateAttribute {
  id          String @id @default(cuid())
  candidateId String
  key         String
  label       String
  value       String
  order       Int

  candidate Candidate @relation(fields: [candidateId], references: [id], onDelete: Cascade)

  @@index([candidateId])
}
